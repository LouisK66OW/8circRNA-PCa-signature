fix(rt)
cibersort_raw <-rt%>% #read.table("CIBERSORT-Results.txt",header = T,sep = '\t') %>%
rename("Patients" = "Mixture") %>%
select(-c("P.value","Correlation","RMSE"))
fix(rt)
colnames(rt)
cibersort_raw <-rt#read.table("CIBERSORT-Results.txt",header = T,sep = '\t') %>%
cibersort_raw <-rt#read.table("CIBERSORT-Results.txt",header = T,sep = '\t') %>%
rename("Patients" = "Mixture") %>%
select(-c("P-value","Pearson Correlation","RMSE"))
cibersort_raw <-rt%>%#read.table("CIBERSORT-Results.txt",header = T,sep = '\t') %>%
rename("Patients" = "Mixture") %>%
select(-c("P-value","Pearson Correlation","RMSE"))
####
cibersort_tidy <- cibersort_raw %>%
remove_rownames() %>%
column_to_rownames("Patients")
flag <- apply(cibersort_tidy,2,function(x) sum(x == 0) <
dim(cibersort_tidy)[1]/2)
cibersort_tidy <- cibersort_tidy[,which(flag)] %>%
as.matrix() %>%
t()
bk <- c(seq(0,0.2,by = 0.01),seq(0.21,0.85,by=0.01))
# Step4:将CIBERSORT_Result进行可视化
#1）热图
library(pheatmap)
library(RColorBrewer)
pheatmap(
cibersort_tidy[,-23],
breaks = bk,
cluster_cols = T,
scale = "row",
cluster_row = T,
border_color = NA,
show_colnames = F,
show_rownames = T,
color = c(colorRampPalette(colors = c("blue","white"))(length(bk)/2),
colorRampPalette(colors = c("white","red"))(length(bk)/2)
))
#柱状图可视化细胞占比预测
library(RColorBrewer)
mypalette <- colorRampPalette(brewer.pal(8,"Set1"))
cibersort_barplot <- cibersort_raw %>%
gather(key = Cell_type,value = Proportion,2:23)
ggplot(cibersort_barplot,aes(Patients,Proportion,fill = Cell_type)) +
geom_bar(position = "stack",stat = "identity") +
labs(fill = "Cell Type",x = "",y = "Estiamted Proportion") + theme_bw() +
theme(axis.text.x = element_blank()) + theme(axis.ticks.x = element_blank()) +
scale_y_continuous(expand = c(0.01,0)) +
scale_fill_manual(values = mypalette(23))
#加载meta临床信息表
load(file='TCGA_RPKM_8circRNA.Rdata')
metanew <- meta[,c('ID','Rscore_group')]
colnames(metanew) <- c('Patients','R_score')
cibersort_barplot <- cibersort_barplot %>%
left_join(metanew, c("Patients" = "Patients"))
#直观箱线图
ggplot(cibersort_barplot,aes(Cell_type,Proportion,fill = R_score)) +
geom_boxplot(outlier.shape = 21,colour = "black") + theme_bw() +
labs(x = "", y = "Estimated Proportion") +
theme(axis.text.x = element_blank()) + theme(axis.ticks.x = element_blank()) +
scale_fill_manual(values = mypalette(23))
ggplot(cibersort_barplot,aes(Cell_type,Proportion,fill = R_score)) +
geom_boxplot(outlier.shape = 21,colour = "black") + theme_bw() +
labs(x = "", y = "Estimated Proportion") +
theme(axis.text.x = element_blank()) + theme(axis.ticks.x = element_blank())
ggplot(cibersort_barplot,aes(Cell_type,Proportion,fill = R_score)) +
stat_boxplot(geom ="errorbar") +
#stat_compare_means(aes(group=R_score), label = "p.format")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE) +
theme_bw() +
labs(x = "", y = "Estimated Proportion") +
theme(axis.text.x = element_blank()) + theme(axis.ticks.x = element_blank())
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.signif",method="wilcox.test")+
theme_bw()
library(ggpubr)
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.signif",method="wilcox.test")+
theme_bw()
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.signif",method="wilcox.test")+
theme_bw()+
theme(
legend.position = "top",
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
axis.text.x=element_text(size=rel(1.1),face="bold"),
axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
panel.border = element_blank(),
panel.grid = element_blank()
)+
guides(color=FALSE)
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.signif",method="wilcox.test")+
theme_bw()+
theme(
legend.position = "top",
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
axis.text.x=element_text(size=rel(1.1),face="bold"),
axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
panel.border = element_blank(),
panel.grid = element_blank()
)+
guides(color=FALSE)+
coord_flip()
pheatmap(
cibersort_tidy[,-23])
pheatmap(
cibersort_tidy[,-23],
breaks = bk,
cluster_cols = T,
scale = "row",
cluster_row = T,
border_color = NA,
show_colnames = F,
show_rownames = T,
color = c(colorRampPalette(colors = c("blue","white"))(length(bk)/2),
colorRampPalette(colors = c("white","red"))(length(bk)/2)
))
pheatmap(
scale(cibersort_tidy[,-23])
)
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.format",method="wilcox.test")+
theme_bw()+
theme(
legend.position = "top",
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
axis.text.x=element_text(size=rel(1.1),face="bold"),
axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
panel.border = element_blank(),
panel.grid = element_blank()
)+
guides(color=FALSE)+
coord_flip()
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.format",method="wilcox.test",lable.y=0.55)+
theme_bw()+
theme(
legend.position = "top",
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
axis.text.x=element_text(size=rel(1.1),face="bold"),
axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
panel.border = element_blank(),
panel.grid = element_blank()
)+
guides(color=FALSE)+
coord_flip()
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.format",method="wilcox.test",lable.y=0.52)+
theme_bw()+
theme(
legend.position = "top",
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
axis.text.x=element_text(size=rel(1.1),face="bold"),
axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
panel.border = element_blank(),
panel.grid = element_blank()
)+
guides(color=FALSE)+
coord_flip()
library(ggpubr)
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.format",method="wilcox.test")+
stat_compare_means(lable.y=0.52)
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.format",method="wilcox.test")+
stat_compare_means(label.y=0.52)+
theme_bw()+
theme(
legend.position = "top",
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
axis.text.x=element_text(size=rel(1.1),face="bold"),
axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
panel.border = element_blank(),
panel.grid = element_blank()
)+
guides(color=FALSE)+
coord_flip()
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.format",method="wilcox.test")+
stat_compare_means(label.y=0.52)
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.format",label.y=0.52,method="wilcox.test")+
theme_bw()+
theme(
legend.position = "top",
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
axis.text.x=element_text(size=rel(1.1),face="bold"),
axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
panel.border = element_blank(),
panel.grid = element_blank()
)+
guides(color=FALSE)+
coord_flip()
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.format",label.y=0.55,method="wilcox.test")+
theme_bw()+
theme(
legend.position = "top",
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
axis.text.x=element_text(size=rel(1.1),face="bold"),
axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
panel.border = element_blank(),
panel.grid = element_blank()
)+
guides(color=FALSE)+
coord_flip()
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.format",label.y=0.57,method="wilcox.test")+
theme_bw()+
theme(
legend.position = "top",
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
axis.text.x=element_text(size=rel(1.1),face="bold"),
axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
panel.border = element_blank(),
panel.grid = element_blank()
)+
guides(color=FALSE)+
coord_flip()
ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.format",label.y=0.575,method="wilcox.test")+
theme_bw()+
theme(
legend.position = "top",
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
axis.text.x=element_text(size=rel(1.1),face="bold"),
axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
panel.border = element_blank(),
panel.grid = element_blank()
)+
guides(color=FALSE)+
coord_flip()
p <- ggplot(cibersort_barplot,aes(x=Cell_type,y=Proportion,fill=R_score))+
stat_boxplot(geom ="errorbar")+
geom_boxplot(outlier.shape = 21,colour = "black",outlier.alpha=0.2,varwidth = TRUE)+
scale_fill_manual(values = c("red", "green"))+
scale_y_continuous(limits = c(0,0.6),breaks=seq(0,0.6,0.1))+
stat_compare_means(aes(group=R_score), label = "p.format",label.y=0.575,method="wilcox.test")+
theme_bw()+
theme(
legend.position = "top",
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
axis.text.x=element_text(size=rel(1.1),face="bold"),
axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
panel.border = element_blank(),
panel.grid = element_blank()
)+
guides(color=FALSE)+
coord_flip()
ggsave("boxplot_100.pdf", p, width = 3.15, height = 3.15)
ggsave("boxplot_100.pdf", p, width = 17, height = 17, units = "cm")
#step5 visulization------------------------
rm(list = ls())
options(stringsAsFactors = F)
load(file = 'input.Rdata')
Y[1:4,1:4]
X[1:4,1:4]
dim(X)
dim(Y)
library(preprocessCore)
library(parallel)
library(e1071)
load(file = 'output_obj.Rdata')
rt=read.table("CIBERSORT.Output_net100.txt",header=T,sep="\t",check.names=F)#,row.names=1)
rt=read.table("./CIBERSORT/CIBERSORT.Output_net100.txt",header=T,sep="\t",check.names=F)#,row.names=1)
rt=read.table("./CIBERSOFT/CIBERSORT.Output_net100.txt",header=T,sep="\t",check.names=F)#,row.names=1)
fix(rt)
colnames(rt)
# Step3:将CIBERSORT_Result挑选整理，去除没有差异表达的细胞。
library(dplyr)
library(tidyr)
library(tidyverse)
fix(rt)
colnames(rt)
cibersort_raw <-rt%>%#read.table("CIBERSORT-Results.txt",header = T,sep = '\t') %>%
rename("Patients" = "Mixture") %>%
select(-c("P-value","Pearson Correlation","RMSE"))
fix(rt)
cibersort_raw <-rt%>%#read.table("CIBERSORT-Results.txt",header = T,sep = '\t') %>%
rename("Patients" = "Mixture") %>%
select(-c("P-value","Pearson Correlation","RMSE"))
####
cibersort_tidy <- cibersort_raw %>%
remove_rownames() %>%
column_to_rownames("Patients")
flag <- apply(cibersort_tidy,2,function(x) sum(x == 0) <
dim(cibersort_tidy)[1]/2)
cibersort_tidy <- cibersort_tidy[,which(flag)] %>%
as.matrix() %>%
t()
bk <- c(seq(0,0.2,by = 0.01),seq(0.21,0.85,by=0.01))
# Step4:将CIBERSORT_Result进行可视化
#1）热图
library(pheatmap)
library(RColorBrewer)
pheatmap(
cibersort_tidy[,-23],
breaks = bk,
cluster_cols = T,
scale = "row",
cluster_row = T,
border_color = NA,
show_colnames = F,
show_rownames = T,
color = c(colorRampPalette(colors = c("blue","white"))(length(bk)/2),
colorRampPalette(colors = c("white","red"))(length(bk)/2)
))
#柱状图可视化细胞占比预测
library(RColorBrewer)
mypalette <- colorRampPalette(brewer.pal(8,"Set1"))
cibersort_barplot <- cibersort_raw %>%
gather(key = Cell_type,value = Proportion,2:23)
#step5 visulization------------------------
rm(list = ls())
options(stringsAsFactors = F)
load(file = 'input.Rdata')
Y[1:4,1:4]
X[1:4,1:4]
dim(X)
dim(Y)
library(preprocessCore)
library(parallel)
library(e1071)
load(file = 'output_obj.Rdata')
rt=read.table("./CIBERSOFT/CIBERSORT.Output_net100.txt",header=T,sep="\t",check.names=F)#,row.names=1)
fix(rt)
#将第一列列名修改为Mixture
colnames(rt)
# Step3:将CIBERSORT_Result挑选整理，去除没有差异表达的细胞。
library(dplyr)
library(tidyr)
library(tidyverse)
View(rt)
rt%>%#read.table("CIBERSORT-Results.txt",header = T,sep = '\t') %>%
rename("Patients" = "Mixture") %>%
select(-c("P-value","Pearson Correlation","RMSE"))
rt%>%#read.table("CIBERSORT-Results.txt",header = T,sep = '\t') %>%
rename("Patients" = "Input Sample") %>%
select(-c("P-value","Pearson Correlation","RMSE"))
cibersort_raw <-rt%>%#read.table("CIBERSORT-Results.txt",header = T,sep = '\t') %>%
rename("Patients" = "Input Sample") %>%
select(-c("P-value","Pearson Correlation","RMSE"))
####
cibersort_tidy <- cibersort_raw %>%
remove_rownames() %>%
column_to_rownames("Patients")
flag <- apply(cibersort_tidy,2,function(x) sum(x == 0) <
dim(cibersort_tidy)[1]/2)
cibersort_tidy <- cibersort_tidy[,which(flag)] %>%
as.matrix() %>%
t()
bk <- c(seq(0,0.2,by = 0.01),seq(0.21,0.85,by=0.01))
# Step4:将CIBERSORT_Result进行可视化
#1）热图
library(pheatmap)
library(RColorBrewer)
pheatmap(
cibersort_tidy[,-23],
breaks = bk,
cluster_cols = T,
scale = "row",
cluster_row = T,
border_color = NA,
show_colnames = F,
show_rownames = T,
color = c(colorRampPalette(colors = c("blue","white"))(length(bk)/2),
colorRampPalette(colors = c("white","red"))(length(bk)/2)
))
#柱状图可视化细胞占比预测
library(RColorBrewer)
mypalette <- colorRampPalette(brewer.pal(8,"Set1"))
cibersort_barplot <- cibersort_raw %>%
gather(key = Cell_type,value = Proportion,2:23)
#加载meta临床信息表
load(file='TCGA_RPKM_8circRNA.Rdata')
metanew <- meta[,c('ID','Rscore_group')]
colnames(metanew) <- c('Patients','R_score')
cibersort_barplot <- cibersort_barplot %>%
left_join(metanew, c("Patients" = "Patients"))
ggplot(cibersort_barplot,aes(Patients,Proportion,fill = Cell_type)) +
geom_bar(position = "stack",stat = "identity") +
labs(fill = "Cell Type",x = "",y = "Estiamted Proportion") + theme_bw() +
theme(axis.text.x = element_blank()) + theme(axis.ticks.x = element_blank()) +
scale_y_continuous(expand = c(0.01,0)) +
scale_fill_manual(values = mypalette(23))
#直观箱线图
ggplot(cibersort_barplot,aes(Cell_type,Proportion,fill = R_score)) +
geom_boxplot(outlier.shape = 21,colour = "black") + theme_bw() +
labs(x = "", y = "Estimated Proportion") +
theme(axis.text.x = element_blank()) + theme(axis.ticks.x = element_blank()) +
scale_fill_manual(values = mypalette(23))
#step5 visulization------------------------
rm(list = ls())
options(stringsAsFactors = F)
